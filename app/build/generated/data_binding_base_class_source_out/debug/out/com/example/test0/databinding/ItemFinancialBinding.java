// Generated by view binder compiler. Do not edit!
package com.example.test0.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.test0.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemFinancialBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView accountNoTv;

  @NonNull
  public final TextView balanceTv;

  @NonNull
  public final CardView cardview;

  @NonNull
  public final RelativeLayout firstLin;

  @NonNull
  public final ImageView imageIcon;

  @NonNull
  public final TextView transactionTv;

  @NonNull
  public final TextView userIdTv;

  private ItemFinancialBinding(@NonNull LinearLayout rootView, @NonNull TextView accountNoTv,
      @NonNull TextView balanceTv, @NonNull CardView cardview, @NonNull RelativeLayout firstLin,
      @NonNull ImageView imageIcon, @NonNull TextView transactionTv, @NonNull TextView userIdTv) {
    this.rootView = rootView;
    this.accountNoTv = accountNoTv;
    this.balanceTv = balanceTv;
    this.cardview = cardview;
    this.firstLin = firstLin;
    this.imageIcon = imageIcon;
    this.transactionTv = transactionTv;
    this.userIdTv = userIdTv;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemFinancialBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemFinancialBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_financial, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemFinancialBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.accountNo_tv;
      TextView accountNoTv = ViewBindings.findChildViewById(rootView, id);
      if (accountNoTv == null) {
        break missingId;
      }

      id = R.id.balance_tv;
      TextView balanceTv = ViewBindings.findChildViewById(rootView, id);
      if (balanceTv == null) {
        break missingId;
      }

      id = R.id.cardview;
      CardView cardview = ViewBindings.findChildViewById(rootView, id);
      if (cardview == null) {
        break missingId;
      }

      id = R.id.firstLin;
      RelativeLayout firstLin = ViewBindings.findChildViewById(rootView, id);
      if (firstLin == null) {
        break missingId;
      }

      id = R.id.imageIcon;
      ImageView imageIcon = ViewBindings.findChildViewById(rootView, id);
      if (imageIcon == null) {
        break missingId;
      }

      id = R.id.transaction_tv;
      TextView transactionTv = ViewBindings.findChildViewById(rootView, id);
      if (transactionTv == null) {
        break missingId;
      }

      id = R.id.user_id_tv;
      TextView userIdTv = ViewBindings.findChildViewById(rootView, id);
      if (userIdTv == null) {
        break missingId;
      }

      return new ItemFinancialBinding((LinearLayout) rootView, accountNoTv, balanceTv, cardview,
          firstLin, imageIcon, transactionTv, userIdTv);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
