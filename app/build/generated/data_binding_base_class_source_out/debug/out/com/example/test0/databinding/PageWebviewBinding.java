// Generated by view binder compiler. Do not edit!
package com.example.test0.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.test0.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PageWebviewBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LinearLayout btmLayout;

  @NonNull
  public final Button nextBtn;

  @NonNull
  public final Button previosBtn;

  @NonNull
  public final ProgressBar progress1;

  @NonNull
  public final WebView webView1;

  private PageWebviewBinding(@NonNull RelativeLayout rootView, @NonNull LinearLayout btmLayout,
      @NonNull Button nextBtn, @NonNull Button previosBtn, @NonNull ProgressBar progress1,
      @NonNull WebView webView1) {
    this.rootView = rootView;
    this.btmLayout = btmLayout;
    this.nextBtn = nextBtn;
    this.previosBtn = previosBtn;
    this.progress1 = progress1;
    this.webView1 = webView1;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PageWebviewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PageWebviewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.page_webview, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PageWebviewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btm_layout;
      LinearLayout btmLayout = ViewBindings.findChildViewById(rootView, id);
      if (btmLayout == null) {
        break missingId;
      }

      id = R.id.next_btn;
      Button nextBtn = ViewBindings.findChildViewById(rootView, id);
      if (nextBtn == null) {
        break missingId;
      }

      id = R.id.previos_btn;
      Button previosBtn = ViewBindings.findChildViewById(rootView, id);
      if (previosBtn == null) {
        break missingId;
      }

      id = R.id.progress1;
      ProgressBar progress1 = ViewBindings.findChildViewById(rootView, id);
      if (progress1 == null) {
        break missingId;
      }

      id = R.id.webView1;
      WebView webView1 = ViewBindings.findChildViewById(rootView, id);
      if (webView1 == null) {
        break missingId;
      }

      return new PageWebviewBinding((RelativeLayout) rootView, btmLayout, nextBtn, previosBtn,
          progress1, webView1);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
