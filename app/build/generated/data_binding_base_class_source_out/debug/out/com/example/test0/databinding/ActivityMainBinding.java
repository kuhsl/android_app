// Generated by view binder compiler. Do not edit!
package com.example.test0.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.test0.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnMainFin;

  @NonNull
  public final Button btnMainMed;

  @NonNull
  public final Button btnMainPub;

  @NonNull
  public final Button btnSvrLogin;

  @NonNull
  public final TextView textMain;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnMainFin,
      @NonNull Button btnMainMed, @NonNull Button btnMainPub, @NonNull Button btnSvrLogin,
      @NonNull TextView textMain) {
    this.rootView = rootView;
    this.btnMainFin = btnMainFin;
    this.btnMainMed = btnMainMed;
    this.btnMainPub = btnMainPub;
    this.btnSvrLogin = btnSvrLogin;
    this.textMain = textMain;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnMainFin;
      Button btnMainFin = ViewBindings.findChildViewById(rootView, id);
      if (btnMainFin == null) {
        break missingId;
      }

      id = R.id.btnMainMed;
      Button btnMainMed = ViewBindings.findChildViewById(rootView, id);
      if (btnMainMed == null) {
        break missingId;
      }

      id = R.id.btnMainPub;
      Button btnMainPub = ViewBindings.findChildViewById(rootView, id);
      if (btnMainPub == null) {
        break missingId;
      }

      id = R.id.btnSvrLogin;
      Button btnSvrLogin = ViewBindings.findChildViewById(rootView, id);
      if (btnSvrLogin == null) {
        break missingId;
      }

      id = R.id.textMain;
      TextView textMain = ViewBindings.findChildViewById(rootView, id);
      if (textMain == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, btnMainFin, btnMainMed,
          btnMainPub, btnSvrLogin, textMain);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
